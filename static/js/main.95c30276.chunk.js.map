{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledNext.js","components/DisplayTetro.js","components/styles/StyledButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledNext","DisplayTetro","tetro","coluna","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","next","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.95c30276.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          !stage[y + player.pos.y + moveY] ||\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            'clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n","import styled from 'styled-components';\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #000;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0' },\r\n  I: {\r\n    shape: [\r\n        [0, 'I', 0, 0], \r\n        [0, 'I', 0, 0], \r\n        [0, 'I', 0, 0], \r\n        [0, 'I', 0, 0]],\r\n    color: '80, 227, 230',\r\n  },\r\n  J: { shape: [\r\n      [0, 0, 0, 0], \r\n      [0,0, 'J',0], \r\n      [0,0, 'J',0], \r\n      [0,'J', 'J',0]\r\n    ], color: '36, 95, 223' },\r\n  L: {\r\n    shape: [\r\n        [0, 0, 0, 0], \r\n        [0, 'L', 0,0], \r\n        [0, 'L', 0,0], \r\n        [0, 'L', 'L',0]],\r\n    color: '255, 140, 0',\r\n  },\r\n  O: { shape: [\r\n       \r\n      [0, 0, 0, 0], \r\n      [0,'O', 'O',0], \r\n      [0,'O', 'O',0],\r\n      [0, 0, 0, 0]\r\n    ], color: '255, 255, 0' },\r\n  S: { shape: [\r\n      [0, 0, 0, 0], \r\n      [0, 'S', 'S',0], \r\n      ['S', 'S', 0,0], \r\n      [0, 0, 0,0]], color: '48, 211, 56' },\r\n  T: {\r\n    shape: [\r\n         \r\n        [0,0, 0, 0], \r\n        ['T', 'T', 'T',0], \r\n        [0, 'T', 0,0],\r\n        [0, 0, 0, 0]],\r\n    color: '139, 0, 139',\r\n  },\r\n  Z: { shape: [\r\n      [0, 0, 0, 0], \r\n      ['Z', 'Z', 0,0], \r\n      [0, 'Z', 'Z',0], \r\n      [0, 0, 0,0]\r\n    ], color: '255, 20, 20' },\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'IJLOSTZ';\r\n  const randTetromino =\r\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n  return TETROMINOS[randTetromino];\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, []);\r\n\r\n    const updateStage = prevStage => {\r\n      // First flush the stage\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n      );\r\n\r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      // Then check if we got some score if collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n      return newStage;\r\n    };\r\n\r\n    // Here are the updates\r\n    setStage(prev => updateStage(prev));\r\n  }, [\r\n    player.collided,\r\n    player.pos.x,\r\n    player.pos.y,\r\n    player.tetromino,\r\n    resetPlayer,\r\n  ]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(25vw / ${props => props.width})\r\n  );\r\n  grid-template-columns: repeat(${props => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 25vw;\r\n  background: #111;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n // border-radius: 3px;\r\n  background: ${props => props.type ?  'rgba('+props.color+',0.8)' :  '#'};\r\n  border: ${props => (props.type === 0 ? '0px' : '4px solid')};\r\n  \r\n  border-bottom-color: rgba(${props => props.color}, 0.1);\r\n  border-right-color: rgba(${props => props.color}, 1);\r\n  border-top-color: rgba(${props => props.color}, 1);\r\n  border-left-color: rgba(${props => props.color}, 0.3);\r\n  \r\n`;\r\n","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\n// React.memo makes sure we only re-render the changed cells\r\nconst Cell = ({ type }) => (\r\n  <StyledCell type={type} color={TETROMINOS[type].color}>\r\n  \r\n  </StyledCell>\r\n);\r\n\r\nexport default React.memo(Cell);\r\n","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n  </StyledStage>\r\n);\r\n\r\nexport default Stage;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n  opacity: 0.969;\r\n`;\r\n","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n);\r\n\r\nexport default Display;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNext = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(7vw / ${props => props.width})\r\n  );\r\n  grid-template-columns: repeat(${props => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 7vw;\r\n  background: #111;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\nimport {StyledNext} from './styles/StyledNext';\r\nimport Cell from './Cell';\r\n\r\n\r\n\r\nconst DisplayTetro = ({ tetro,text}) =>\r\n\r\n(\r\n    <StyledDisplay>\r\n        {text}\r\n    <StyledNext width={4} height={4}>\r\n        {tetro.map(row => \r\n                    row.map((coluna,x) => <Cell key={x} type={coluna} />)\r\n\r\n        )}        \r\n    </StyledNext>\r\n    </StyledDisplay>\r\n  );\r\n  \r\n  export default DisplayTetro;\r\n  ","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n    box-sizing: border-box;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    border: none;\r\n    color: white;\r\n    background: #333;\r\n    font-family: Pixel, Arial, Helvetica, sans-serif;\r\n    font-size: 1rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n    opacity: 0.95;\r\n`;","import React from 'react';\r\n\r\nimport {StyledStartButton} from './styles/StyledButton';\r\n\r\nconst StartButton = ({ callback }) => (\r\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;\r\n","import React, { useState } from 'react';\r\n\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// Custom Hooks\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport DisplayTetro from './DisplayTetro';\r\nimport StartButton from './StartButton';\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\r\n    rowsCleared\r\n  );\r\n\r\n\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n        setDropTime(1000 / (level + 1));\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    // Reset everything\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setScore(0);\r\n    setLevel(0);\r\n    setRows(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const drop = () => {\r\n    // Increase level when player has cleared 10 rows\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel(prev => prev + 1);\r\n      // Also increase speed\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      // Game over!\r\n      if (player.pos.y < 1) {\r\n        console.log('GAME OVER!!!');\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const dropPlayer = () => {\r\n    // We don't need to run the interval when we use the arrow down to\r\n    // move the tetromino downwards. So deactivate it for now.\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  // This one starts the game\r\n  // Custom hook by Dan Abramov\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyDown={e => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <div>\r\n              <Display gameOver={gameOver} text=\"Game Over\" />\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n              <DisplayTetro tetro={player.next} text={`Next: `} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n    next: randomTetromino().shape,\r\n  });\r\n\r\n  function rotate(matrix, dir) {\r\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\r\n    if (dir > 0) return mtrx.map(row => row.reverse());\r\n    return mtrx.reverse();\r\n  }\r\n \r\n  function playerRotate(stage, dir) {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n        return;\r\n      }\r\n    }\r\n    setPlayer(clonedPlayer);\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided,\r\n    }));\r\n  };\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: player.next,\r\n      collided: false,\r\n      next: randomTetromino().shape,\r\n    });\r\n  }, [player]);\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n    // We have score\r\n    if (rowsCleared > 0) {\r\n      // This is how original Tetris score is calculated\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from 'react';\r\nimport Tetris from './components/Tetris';\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Tetris />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/bg.415f0e5a.png\";"],"sourceRoot":""}